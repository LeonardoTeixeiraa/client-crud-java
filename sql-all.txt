-- Ativa extensão pgcrypto (para criptografar senhas com crypt())
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Tabela fornecedor
CREATE TABLE IF NOT EXISTS fornecedor (
    id_for serial,
    nome_for character varying(50), 
    cnpj_for character varying(15),
    tel_for character varying(13),
    data_cad_for date,
    CONSTRAINT fornecedor_pkey PRIMARY KEY (id_for)
);

-- Tabela cliente
CREATE TABLE IF NOT EXISTS cliente (
    id_cli serial,
    nome_cli character varying(50) NOT NULL,
    logradouro_cli character varying(50),
    bairro_cli character varying(50),
    cidade_cli character varying(50),
    estado_cli character(2),
    cep_cli character varying(10),
    cpf_cli character varying(14),
    rg_cli character varying(20),
    numero_cli integer,
    CONSTRAINT clientes_pkey PRIMARY KEY (id_cli),
    CONSTRAINT clientes_cpf_cli_key UNIQUE (cpf_cli)
);

-- Tabela produto
CREATE TABLE IF NOT EXISTS produto (
    id_prod serial,
    nome_prod character varying(50),
    desc_prod character varying(50),
    cod_bar_prod character varying(13),
    p_custo_prod double precision,
    p_venda_prod double precision,
    id_for integer,
    CONSTRAINT produto_pkey PRIMARY KEY (id_prod),
    CONSTRAINT fornecedor_fk FOREIGN KEY (id_for) REFERENCES fornecedor (id_for)
);

-- Tabela venda
CREATE TABLE IF NOT EXISTS venda (
    id_vend serial,
    data_vend date,
    val_vend double precision,
    id_cli integer,
    CONSTRAINT venda_pkey PRIMARY KEY (id_vend),
    CONSTRAINT venda_id_cli_fkey FOREIGN KEY (id_cli) REFERENCES cliente (id_cli)
);

-- Tabela produto_venda
CREATE TABLE IF NOT EXISTS produto_venda (
    id_prod integer,
    id_vend integer,
    val_prod double precision,
    qtd_prod integer,
    CONSTRAINT produto_venda_id_prod_fkey FOREIGN KEY (id_prod) REFERENCES produto (id_prod),
    CONSTRAINT produto_venda_id_vend_fkey FOREIGN KEY (id_vend) REFERENCES venda (id_vend)
);

-- Tabela funcionario
CREATE TABLE IF NOT EXISTS funcionario (
    id_fun serial PRIMARY KEY,
    nome_fun varchar(50),
    cpf_fun varchar(14) UNIQUE,
    login_fun varchar(30) UNIQUE,
    senha_fun varchar(100),
    tipo_fun varchar(13)
);

-- Inserção de usuário administrador
INSERT INTO funcionario (
    nome_fun, cpf_fun, login_fun, senha_fun, tipo_fun
) VALUES (
    'Administrador do Sistema',
    '000.000.000-00',
    'admin',
    crypt('ifsp123', gen_salt('bf', 8)),
    'Administrador'
);

